name: Label Pull Requests

on:
  pull_request:
    types: [opened, synchronize]
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  label:
    name: Auto-label PR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Label PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const repo = context.repo;
            const title = pr.title.toLowerCase();
            
            // Define label categories
            const labelCategories = {
              'enhancement': ['feature', 'implement', 'add', 'support', 'enhance'],
              'bug': ['fix', 'bug', 'issue', 'error', 'crash'],
              'documentation': ['doc', 'documentation', 'readme', 'comment'],
              'ci': ['ci', 'workflow', 'github action', 'pipeline'],
              'dependencies': ['dependency', 'dependencies', 'upgrade', 'version'],
              'translation': ['translation', 'language', 'mbart', 'multilingual'],
              'anonymization': ['anonymization', 'anonymize', 'pii', 'privacy']
            };
            
            // Collect labels to apply
            const labelsToAdd = [];
            
            // Check title and body for keywords
            for (const [label, keywords] of Object.entries(labelCategories)) {
              for (const keyword of keywords) {
                if (title.includes(keyword) || (pr.body && pr.body.toLowerCase().includes(keyword))) {
                  labelsToAdd.push(label);
                  break;
                }
              }
            }
            
            // Add PR size label based on number of changes
            const additions = pr.additions || 0;
            const deletions = pr.deletions || 0;
            const totalChanges = additions + deletions;
            
            let sizeLabel = 'size: xs';
            if (totalChanges > 1000) sizeLabel = 'size: xl';
            else if (totalChanges > 500) sizeLabel = 'size: l';
            else if (totalChanges > 100) sizeLabel = 'size: m';
            else if (totalChanges > 30) sizeLabel = 'size: s';
            
            labelsToAdd.push(sizeLabel);
            
            // Remove duplicates
            const uniqueLabels = [...new Set(labelsToAdd)];
            
            // Apply labels
            if (uniqueLabels.length > 0) {
              await github.rest.issues.addLabels({
                issue_number: pr.number,
                owner: repo.owner,
                repo: repo.repo,
                labels: uniqueLabels
              });
              
              console.log(`Applied labels: ${uniqueLabels.join(', ')}`);
            } else {
              console.log('No labels to apply');
            }